
@{
    ViewBag.Title = "ProjectAdd";
}
<p><h2>Manage Projects</h2><hr /></p>
<form>
    <div class="col-md-4">
        <div class="form-group">
            <label>Customer Name</label>
            <input class="form-control" type="text" id="custName" />
        </div>
        <div class="form-group">
            <label>Project Name</label>
            <input class="form-control" type="text" id="projectName" />
        </div>
        <div class="form-group">
            <label>Project Id</label>
            <input class="form-control" type="text" id="Id" />
        </div>
        <div class="form-group">
            <label>Start Date</label>
            <input class="form-control" type="date" id="startDate" />
        </div>
        <div class="form-group">
            <label>End Date</label>
            <input class="form-control" type="date" id="endDate" />
        </div>
        <div class="form-group">
            <label>Project Status</label>
            <select class="form-control" id="ddlProjectStatus">
            </select>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <label>Location/Group</label>
            <select class="form-control" id="ddlLocationGroup">
            </select>
        </div>
        <div class="form-group">
            <label>PayRoll State</label>
            <select class="form-control" id="ddlPayrollState">
            </select>
        </div>
        <div class="form-group">
            <label>Sales Person</label>
            <select class="form-control" id="ddlSalesPerson">
            </select>
        </div>
        <div class="form-group">
            <label>Project Catagory</label>
            <select class="form-control" id="ddlProjectCatagory">
            </select>
        </div>
        <div class="form-group">
            <label>Project Type</label>
            <select class="form-control" id="ddlProjectType">
            </select>
        </div>
        <div class="form-group">
            <label>Sub-Domain</label>
            <select class="form-control" id="ddlSubDomain">
            </select>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <label>Times Sheet Representative</label>
            <select class="form-control" id="ddlTimesSheetRep">
            </select>
        </div>
        <div class="form-group">
            <label>Client-Invoice Group</label>
            <select class="form-control" id="ddlClientInvoiceGroup">
            </select>
        </div>
        <div class="form-group">
            <label>Timesheet Type</label>
            <select class="form-control" id="ddlTimesheetType">
            </select>
        </div>
        <div class="form-group">
            <label>Is VMS Timesheet</label>
            <input name="radioName" type="radio" id="yes" value="Yes" />
            <label for="yes">Yes</label>
            <input name="radioName" type="radio" id="no" value="No" />
            <label for="no">No</label>
        </div>
        <div class="form-group">
            <label>Practice Type</label>
            <select class="form-control" id="ddlPracticeType">
            </select>
        </div>
        <div class="form-group">
            <label>Recruiter</label>
            <select class="form-control" id="ddlRecruiter">
            </select>
        </div>
    </div>
    <input type="button" value="Submit" id="btnSave" />
</form>
@section scripts{
    <script>
        $(document).ready(function () {
            BindProjectStatusList();
            BindProjectCatagoryList();
            BindTimeSheetList();
            BindProjectTypeList();
            BindPracTypeList();
            BindCIGList();
            BindRecuriterList();
            BindLocationList();
            BindSubDomainList();
            BindTSRList();
            BindSalesPersonList();
            BindPayRollList();
            $("#btnSave").on("click",
                function (){
                if (IsValidate()) {
                    SaveData();
                }
            });
        });

        

        function IsValidate() {
            let flag = true;
            if (!custNameValidationJQ()) {
                flag = false;
            }
            if (!projNameValidationJQ()) {
                flag = false;
            }
            if (!projIdValidationJQ()) {
                flag = false;
            }
            if (!dateValidationJQ())
            {
                flag = false;
            }
            if (!ddlProjStatCheckJQ())
            {
                flag = false;
            }
            return true;
        }
        function clearMessageJQ(ele) {
            $(ele).siblings('span.error').remove();
        }

        function addErrorMessageJQ(ele, msg) {
            const errorCtrl = $('<span />').addClass('error').html(msg);
            $(ele).closest('div').append(errorCtrl);
        }

        function custNameValidationJQ() {
            let flag = true;
            const ele = $('#custName');
            clearMessageJQ(ele)
            const Name = $(ele).val();
            // console.log(Name);
            if (Name === "" || Name.length <= 2 || !isNaN(Name.split('')[0])) {
                addErrorMessageJQ(custName, 'Name is not valid');
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }
        function projNameValidationJQ() {
            let flag = true;
            const ele = $('#projectName');
            clearMessageJQ(ele)
            const Name = $(ele).val();
            // console.log(Name);
            if (Name === "" || Name.length <= 2 || !isNaN(Name.split('')[0])) {
                addErrorMessageJQ(projectName, 'Name is not valid');
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }
        function projIdValidationJQ() {
            let flag = true;
            const ele = $('#Id');
            clearMessageJQ(ele)
            const Name = $(ele).val();
            // console.log(Name);
            if (Name === "" || Name.split('')[0] == 0 || Name.length!==7) {
                addErrorMessageJQ(Id, 'Id is not valid');
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }
        function dateValidationJQ() {
            let flag = true;
            const ele = $("#startDate");
            clearMessageJQ(ele)
            const selectedDate = new Date($(ele).val());
            // console.log(selectedDate);
            const minDate = new Date('01/01/2000');
            const maxDate = new Date();
            if (selectedDate <= minDate || selectedDate >= maxDate) {
                addErrorMessageJQ(ele, 'Date is not valid');
                flag = false;
            }
            return flag;
        }
        function ddlProjStatCheckJQ() {
            let flag = true;
            const ele = $('#ddlProjectStatus');
            clearMessageJQ(ele)
            const projStatName = $(ele).val();
            if (projStatName === "") {
                addErrorMessageJQ(ele);
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }
        function SaveData() {
            let project = {
                Cust_Name: "",
                Project_Name: "",
                Id: "",
                SD: "",
                ED: "",
                Project_Status: "",
                Location_Group: "",
                PayRoll_State: "",
                Sales_Person: "",
                Proj_Cat: "",
                Proj_Type: "",
                Sub_Dom: "",
                TSP: "",
                CIG: "",
                TimesheetType: "",
                IVT: "",
                Prac_Type: "",
                Recruiter: ""
            };
            project.Cust_Name = $("#custName").val();
            project.Project_Name = $("#projectName").val();
            project.Id = $("#Id").val();
            project.SD = $("#startDate").val();
            project.ED = $("#endDate").val();
            project.Project_Status = $("#ddlProjectStatus :selected").text();
            project.Location_Group = $("#ddlLocationGroup").val();
            project.PayRoll_State = $("#ddlPayrollState").val();
            project.Sales_Person = $("#ddlSalesPerson").val();
            project.Proj_Cat = $("#ddlProjectCatagory").val();
            project.Proj_Type = $("#ddlProjectType").val();
            project.Sub_Dom = $("#ddlSubDomain").val();
            project.TSP = $("#ddlTimesSheetRep").val();
            project.CIG = $("#ddlClientInvoiceGroup").val();
            project.TimesheetType = $("#ddlTimesheetType").val();
            project.IVT = $("input[name='radioName']:checked").val();
            project.Prac_Type = $("#ddlPracticeType").val();
            project.Recruiter = $("#ddlRecruiter").val();
            console.log(project);
            $.ajax({
                method: "POST", //HTTP POST Method
                url: "/ProjectApi/Add", //Controller/View
                dataType: "json",
                data: project,
                success: function () { },
                error: function () { }
            });
        }
        function BindProjectStatusList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetProjectStatus?parentId=1800",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlProjectStatus").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlProjectStatus
                },
                error: function () { }
            })
        }
        function BindProjectCatagoryList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetProjectCatagory?parentId=19491",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlProjectCatagory").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlProjectCatagory
                },
                error: function () { }
            })
        }
        function BindTimeSheetList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetTimeSheet?parentId=13120",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlTimesheetType").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlTimeSheetType
                },
                error: function () { }
            })
        }
        function BindCIGList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetCIG?parentId=10300",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlClientInvoiceGroup").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlClientInvoiceGroup
                },
                error: function () { }
            })
        }
        function BindPracTypeList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetPracType?parentId=15760",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlPracticeType").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlPracticeType
                },
                error: function () { }
            })
        }
        function BindProjectTypeList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetProjectType?parentId=4650",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlProjectType").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlProjectType
                },
                error: function () { }
            })
        }
        function BindRecuriterList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetRecruiter",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlRecruiter").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlRecruiter
                },
                error: function () {}
            })
        }
        function BindLocationList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetLocation",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlLocationGroup").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlLocationGroup
                },
                error: function () { }
            })
        }
        function BindSubDomainList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetSubDomain",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlSubDomain").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlSubDomain
                },
                error: function () { }
            })
        }
        function BindTSRList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetTSR",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlTimesSheetRep").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlTimeSheetRep
                },
                error: function () { }
            })
        }
        function BindSalesPersonList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetSalesPerson",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlSalesPerson").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlSalesPerson
                },
                error: function () { }
            })
        }
        function BindPayRollList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetPayRoll",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlPayrollState").append($("<option></option>").val(this.ID).html(this.Name));
                    });
                    //ddlPayrollState
                },
                error: function () { }
            })
        }
    </script>
}
