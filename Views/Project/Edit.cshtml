
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<form id="myForm">
    <div class="col-md-4">
        <div class="form-group">
            <label>Customer Name</label>
            <input class="form-control" type="text" id="custName" />
        </div>
        <div class="form-group">
            <label>Project Name</label>
            <input class="form-control" type="text" id="projectName" />
        </div>
        <div class="form-group">
            <label>Project Id</label>
            <input class="form-control" type="text" id="Id" />
        </div>
        <div class="form-group">
            <label>Start Date</label>
            <input class="form-control" type="date" id="startDate" />
        </div>
        <div class="form-group">
            <label>End Date</label>
            <input class="form-control" type="date" id="endDate" />
        </div>
        <div class="form-group">
            <label>Project Status</label>
            <select class="form-control" id="ddlProjectStatus">
                <option>Select</option>
            </select>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <label>Location/Group</label>
            <select class="form-control" id="ddlLocationGroup">
                <option>Select</option>
            </select>
        </div>
        <div class="form-group">
            <label>PayRoll State</label>
            <select class="form-control" id="ddlPayrollState">
                <option>Select</option>
            </select>
        </div>
        <div class="form-group">
            <label>Sales Person</label>
            <select class="form-control" id="ddlSalesPerson">
                <option>Select</option>
            </select>
        </div>
        <div class="form-group">
            <label>Project Catagory</label>
            <select class="form-control" id="ddlProjectCatagory">
                <option>Select</option>
            </select>
        </div>
        <div class="form-group">
            <label>Project Type</label>
            <select class="form-control" id="ddlProjectType">
                <option>Select</option>
            </select>
        </div>
        <div class="form-group">
            <label>Sub-Domain</label>
            <select class="form-control" id="ddlSubDomain">
                <option>Select</option>
            </select>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <label>Times Sheet Representative</label>
            <select class="form-control" id="ddlTimesSheetRep">
                <option>Select</option>
            </select>
        </div>
        <div class="form-group">
            <label>Client-Invoice Group</label>
            <select class="form-control" id="ddlClientInvoiceGroup">
                <option>Select</option>
            </select>
        </div>
        <div class="form-group">
            <label>Timesheet Type</label>
            <select class="form-control" id="ddlTimesheetType">
                <option>Select</option>
            </select>
        </div>
        <div class="form-group">
            <label>Is VMS Timesheet</label>
            <input name="radioName" type="radio" id="yes" value="Yes" />
            <label for="yes">Yes</label>
            <input name="radioName" type="radio" id="no" value="No" />
            <label for="no">No</label>
        </div>
        <div class="form-group">
            <label>Practice Type</label>
            <select class="form-control" id="ddlPracticeType">
                <option>Select</option>
            </select>
        </div>
        <div class="form-group">
            <label>Recruiter</label>
            <select class="form-control" id="ddlRecruiter">
                <option>Select</option>
            </select>
        </div>
    </div>
    <input type="button" value="Update" id="btnUpdate" />
</form>
@section scripts{
    <script>
        $(document).ready(function () {
            $.when(
                BindProjectStatusList(),
                BindProjectCatagoryList(),
                BindTimeSheetList(),
                BindProjectTypeList(),
                BindPracTypeList(),
                BindCIGList(),
                BindRecuriterList(),
                BindLocationList(),
                BindSubDomainList(),
                BindTSRList(),
                BindSalesPersonList(),
                BindPayRollList()
            ).done(function () {
                GetData();
            })
            $("#btnUpdate").on("click", function () {
                if (IsValidate()) {
                    SaveData();
                    alert("Form Updated");
                }
            });
        });
        function GetData() {
            $.ajax({
                method: "GET", //HTTP POST Method
                url: "/ProjectApi/EditDetails?Id=54321", //Controller/View
                success: function (data) {
                    //debugger;
                    //console.log(data);
                    $("#custName").val(data[0].Cust_Name);
                    $("#projectName").val(data[0].Project_Name);
                    $("#Id").val(data[0].Id);
                    $("#startDate").val(data[0].SD);
                    $("#endDate").val(data[0].ED);
                    $("#ddlProjectStatus").val(data[0].Project_Status);
                    $("#ddlLocationGroup").val(data[0].Location_Group);
                    $("#ddlPayrollState").val(data[0].PayRoll_State);
                    $("#ddlSalesPerson").val(data[0].Sales_Person);
                    $("#ddlProjectCatagory").val(data[0].Proj_Cat);
                    $("#ddlProjectType").val(data[0].Proj_Type);
                    $("#ddlSubDomain").val(data[0].Sub_Dom);
                    $("#ddlTimesSheetRep").val(data[0].TSP);
                    $("#ddlClientInvoiceGroup").val(data[0].CIG);
                    $("#ddlTimesheetType").val(data[0].TimesheetType);
                    $("input[name='radioName']:checked").val(data[0].IVT);
                    $("#ddlPracticeType").val(data[0].Prac_Type);
                    $("#ddlRecruiter").val(data[0].Recruiter);
                },
                error: function () { }
            });
        }
        function IsValidate() {
            let flag = true;
            if (!custNameValidationJQ()) {
                flag = false;
            }
            if (!projNameValidationJQ()) {
                flag = false;
            }
            if (!projIdValidationJQ()) {
                flag = false;
            }
            if (!StartDateValidation()) {
                flag = false;
            }
            if (!LocationGpValidation()) {
                flag = false;
            }
            if (!StateNameValidation()) {
                flag = false;
            }
            if (!SalesPersonValidation()) {
                flag = false;
            }
            if (!ProjectCategoryValidation()) {
                flag = false;
            }
            if (!SubDomainValidation()) {
                flag = false;
            }
            if (!TSRepresentativenValidation()) {
                flag = false;
            }
            if (!TSTypeValidation()) {
                flag = false;
            }
            if (!PracticeTypeValidation()) {
                flag = false;
            }
            if (!RecruiterValidation()) {
                flag = false;
            }
            if (!InvoiceGpValidation()) {
                flag = false;
            }
            if (!IsVmsTSValidation()) {
                flag = false;
            }
            if (!PSValidation()) {
                flag = false;
            }
            return flag;
        }
        function clearMessageJQ(ele) {
            $(ele).siblings('span.error').remove();
        }
        function addErrorMessageJQ(ele, msg) {
            const errorCtrl = $('<span />').addClass('error').html(msg);
            $(ele).closest('div').append(errorCtrl);
        }
        function custNameValidationJQ() {
            let flag = true;
            const ele = $('#custName');
            clearMessageJQ(ele)
            const Name = $(ele).val();
            // console.log(Name);
            if (Name === "" || Name.length <= 2 || !isNaN(Name.split('')[0])) {
                addErrorMessageJQ(custName, 'Name is not valid');
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }
        function projNameValidationJQ() {
            let flag = true;
            const ele = $('#projectName');
            clearMessageJQ(ele)
            const Name = $(ele).val();
            // console.log(Name);
            if (Name === "" || Name.length <= 2 || !isNaN(Name.split('')[0])) {
                addErrorMessageJQ(projectName, 'Name is not valid');
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }
        function projIdValidationJQ() {
            let flag = true;
            const ele = $('#Id');
            clearMessageJQ(ele)
            const Name = $(ele).val();
            // console.log(Name);
            if (Name === "" || Name.split('')[0] == 0 || Name.length !== 5) {
                addErrorMessageJQ(Id, 'Id is not valid');
                flag = false;
            } else {
                flag = true;
            }
            return flag;
        }
        function StartDateValidation() {
            let flag = true;
            const ele = $('#startDate');
            clearMessageJQ(ele)
            const stDate = $('#startDate').val();
            if (stDate == "") {
                addErrorMessageJQ(ele, 'Please fill the Project Start Date');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function LocationGpValidation() {
            let flag = true;
            const ele = $('#ddlLocationGroup');
            clearMessageJQ(ele)
            const locGp = $('#ddlLocationGroup').val();
            if (locGp == "Select") {
                addErrorMessageJQ(ele, 'Please Select Location Group');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function StateNameValidation() {
            let flag = true;
            const ele = $('#ddlPayrollState');
            clearMessageJQ(ele)
            const stateName = $('#ddlPayrollState').val();
            if (stateName == "Select") {
                addErrorMessageJQ(ele, 'Please Select Payroll State');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function SalesPersonValidation() {
            let flag = true;
            const ele = $('#ddlSalesPerson');
            clearMessageJQ(ele)
            const salesPName = $('#ddlSalesPerson').val();
            if (salesPName == "Select") {
                addErrorMessageJQ(ele, 'Please Select SalesPerson Name');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function ProjectCategoryValidation() {
            let flag = true;
            const ele = $('#ddlProjectCatagory');
            clearMessageJQ(ele)
            const projectCat = $('#ddlProjectCatagory').val();
            if (projectCat == "Select") {
                addErrorMessageJQ(ele, 'Please Select Project Category');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function SubDomainValidation() {
            let flag = true;
            const ele = $('#ddlSubDomain');
            clearMessageJQ(ele)
            const subDomain = $('#ddlSubDomain').val();
            if (subDomain == "Select") {
                addErrorMessageJQ(ele, 'Please Select SubDomain');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function TSRepresentativenValidation() {
            let flag = true;
            const ele = $('#ddlTimesSheetRep');
            clearMessageJQ(ele)
            const tsrp = $('#ddlTimesSheetRep').val();
            if (tsrp == "Select") {
                addErrorMessageJQ(ele, 'Please Select TimeSheet Representative');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function TSTypeValidation() {
            let flag = true;
            const ele = $('#ddlTimesheetType');
            clearMessageJQ(ele)
            const tsType = $('#ddlTimesheetType').val();
            if (tsType == "Select") {
                addErrorMessageJQ(ele, 'Please Select TimeSheet Type');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function PracticeTypeValidation() {
            let flag = true;
            const ele = $('#ddlPracticeType');
            clearMessageJQ(ele)
            const pracType = $('#ddlPracticeType').val();
            if (pracType == "Select") {
                addErrorMessageJQ(ele, 'Please Select Practice Type');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function RecruiterValidation() {
            let flag = true;
            const ele = $('#ddlRecruiter');
            clearMessageJQ(ele)
            const recruiter = $('#ddlRecruiter').val();
            if (recruiter == "Select") {
                addErrorMessageJQ(ele, 'Please Select Recruiter ');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function InvoiceGpValidation() {
            let flag = true;
            const ele = $('#ddlClientInvoiceGroup');
            clearMessageJQ(ele)
            const recruiter = $('#ddlClientInvoiceGroup').val();
            if (recruiter == "Select") {
                addErrorMessageJQ(ele, 'Please Select Invoice Group ');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function IsVmsTSValidation() {
            let flag = true;
            const ele = $("input[name='radioName']:checked");
            clearMessageJQ(ele)
            const isVms = $("input[name='radioName']:checked").val();
            if (isVms == "") {
                addErrorMessageJQ(ele, 'Please Choose One of there ');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function PSValidation() {
            let flag = true;
            const ele = $('#ddlProjectStatus');
            clearMessageJQ(ele)
            const stDate = $('#ddlProjectStatus').val();
            if (stDate == "Select") {
                addErrorMessageJQ(ele, 'Please Select Project Status');
                flag = false;
            } else { flag = true; }
            return flag;
        }
        function SaveData() {
            debugger;
            let project = {};
            project.Cust_Name = $("#custName").val();
            project.Project_Name = $("#projectName").val();
            project.Id = $("#Id").val();
            project.SD = $("#startDate").val();
            project.ED = $("#endDate").val();
            project.Project_Status = $("#ddlProjectStatus").val();
            project.Location_Group = $("#ddlLocationGroup").val();
            project.PayRoll_State = $("#ddlPayrollState").val();
            project.Sales_Person = $("#ddlSalesPerson").val();
            project.Proj_Cat = $("#ddlProjectCatagory").val();
            project.Proj_Type = $("#ddlProjectType").val();
            project.Sub_Dom = $("#ddlSubDomain").val();
            project.TSP = $("#ddlTimesSheetRep").val();
            project.CIG = $("#ddlClientInvoiceGroup").val();
            project.TimesheetType = $("#ddlTimesheetType").val();
            project.IVT = $("input[name='radioName']:checked").val();
            project.Prac_Type = $("#ddlPracticeType").val();
            project.Recruiter = $("#ddlRecruiter").val();
            //console.log(project);
            $.ajax({
                method: "POST", //HTTP POST Method
                url: "/ProjectApi/AddUpdate", //Controller/View
                dataType: "json",
                data: project,
                success: function () {},
                error: function () { }
            });
        }
        function BindProjectStatusList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetProjectStatus?parentId=1800",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        //debugger;
                        $("#ddlProjectStatus").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlProjectStatus
                },
                error: function () { }
            })
        }
        function BindProjectCatagoryList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetProjectCatagory?parentId=19491",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlProjectCatagory").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlProjectCatagory
                },
                error: function () { }
            })
        }
        function BindTimeSheetList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetTimeSheet?parentId=13120",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlTimesheetType").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlTimeSheetType
                },
                error: function () { }
            })
        }
        function BindCIGList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetCIG?parentId=10300",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlClientInvoiceGroup").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlClientInvoiceGroup
                },
                error: function () { }
            })
        }
        function BindPracTypeList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetPracType?parentId=15760",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlPracticeType").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlPracticeType
                },
                error: function () { }
            })
        }
        function BindProjectTypeList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetProjectType?parentId=4650",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlProjectType").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlProjectType
                },
                error: function () { }
            })
        }
        function BindRecuriterList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetRecruiter",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlRecruiter").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlRecruiter
                },
                error: function () { }
            })
        }
        function BindLocationList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetLocation",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlLocationGroup").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlLocationGroup
                },
                error: function () { }
            })
        }
        function BindSubDomainList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetSubDomain",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlSubDomain").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlSubDomain
                },
                error: function () { }
            })
        }
        function BindTSRList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetTSR",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlTimesSheetRep").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlTimeSheetRep
                },
                error: function () { }
            })
        }
        function BindSalesPersonList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetSalesPerson",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlSalesPerson").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlSalesPerson
                },
                error: function () { }
            })
        }
        function BindPayRollList() {
            $.ajax({
                method: "GET",
                url: "/ProjectApi/GetPayRoll",
                success: function (data) {
                    //console.log(data);
                    $(data).each(function () {
                        $("#ddlPayrollState").append($("<option></option>").val(this.Id).html(this.Name));
                    });
                    //ddlPayrollState
                },
                error: function () { }
            })
        }
    </script>
}
